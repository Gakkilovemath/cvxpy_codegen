/*
 *  Copyright 2017 Nicholas Moehle
 *  
 *  This file is part of CVXPY-CODEGEN.
 *  
 *  CVXPY-CODEGEN is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  *  CVXPY-CODEGEN is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with CVXPY-CODEGEN.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "codegen.h"
#include <stdio.h>
#include <time.h>


static clock_t tic_timestart;

void tic(void) {
  tic_timestart = clock();
}

double toc(void) {
  clock_t tic_timestop;
  tic_timestop = clock();
  return((double)((tic_timestop - tic_timestart) / CLOCKS_PER_SEC));
}



int main(){
    
    Params params;
    Work work;
    Vars vars;
    double solve_time;

    {% for p in named_params %}
    {{ p.c_print() }}
    {% endfor %}

    cg_init(&work);
    tic();
    cg_solve(&params, &work, &vars);
    solve_time = toc();
    cg_cleanup(&work); 

    {% for v in named_vars %}
    {{ v.c_print() }}
    {% endfor %}

    printf("Solve time: %f seconds\n", solve_time);
    printf("Optimal value: %f\n", work.optval);

    return(0);
}
