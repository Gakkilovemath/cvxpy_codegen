/*
 *  Copyright 2017 Nicholas Moehle
 *  
 *  This file is part of CVXPY-CODEGEN.
 *  
 *  CVXPY-CODEGEN is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  *  CVXPY-CODEGEN is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with CVXPY-CODEGEN.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "codegen.h"
#include <stdio.h>


int main(){
    
    Params params;
    Work work;
    Vars vars;

    {% for p in named_params %}
      {%- if p.is_scalar %}
    params.{{ p.name }} = {{ p.value }};
      {% elif p.is_column -%}
        {% for i in range(p.shape[0]) %}
    params.{{ p.name }}[{{ i }}] = {{ p.value[i] }};
        {% endfor %}
      {%- else -%}
        {% for i in range(p.shape[0]) %}
          {% for j in range(p.shape[1]) %}
    params.{{ p.name }}[{{ i }}][{{ j }}] = {{ p.value[i,j] }};
          {% endfor %}
        {% endfor %}
      {%- endif -%}
    {% endfor %}

    cg_init(&work);
    cg_solve(&params, &work, &vars);
    cg_cleanup(&work); 


    printf("Optimal value: %f\n", work.optval);

    {% for var in named_vars %}
      {#
      {{ cprint_var(var) }}
      #}
      
      {% for i in range(var.shape[0]) %}
        {% for j in range(var.shape[1]) %}
    printf("{{ var.name() }}[{{ i }}][{{ j }}] = %f\n", vars.{{ var.name() }}[{{ i }}][{{ j }}]);
        {% endfor %}
      {% endfor %}
    {% endfor %}


    return(0);
}
