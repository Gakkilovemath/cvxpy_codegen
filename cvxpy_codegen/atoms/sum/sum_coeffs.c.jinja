/*
 *  Copyright 2017 Nicholas Moehle
 *  
 *  This file is part of CVXPY-CODEGEN.
 *  
 *  CVXPY-CODEGEN is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  CVXPY-CODEGEN is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with CVXPY-CODEGEN.  If not, see <http://www.gnu.org/licenses/>.
 */

{% import "utils/utils.c.jinja" as u with context %}


{% macro sum_coeffs_declare() %}
void sum_coeffs(LinopCoeff *A, LinopCoeff *Z, long *w, double *x);
{% endmacro %}


{% macro sum_coeffs_define() %}
void sum_coeffs(LinopCoeff *A, LinopCoeff *Z, long *w, double *x){
  long i, j, p, p2, q=0, m=A->m, n=A->n;

  Z->p[0] = 0;
  Z->p[1] = 0;
  Z->j[0] = 0;
  Z->m = 1;
  Z->n = n;
  Z->m_var = 1;
  Z->n_var = 1;

  for(j=0; j<n; j++){
    w[j] = 0;
    x[j] = 0;
  }
  for(i=0; i<m; i++){
    p2 = A->p[i+1];
    for(p=A->p[i]; p<p2; p++){
      j = A->j[p];
      if(w[j] == 0){
        w[j] = 1;
        Z->j[q++] = j;
        x[j] = A->x[p];
        Z->p[1]++;
      }
      else{
        x[j] += A->x[p];
      }
    }
  }
  p2 = Z->p[1];
  for(p=0; p<p2; p++) Z->x[p] = x[Z->j[p]];
}
{% endmacro %}


{% macro sum_coeffs_eval(expr) %}
sum_coeffs(&work->{{ expr.args[0].storage.name }},
                     &work->{{ expr.storage.name }},
                     work->work_int, work->work_double);
{% endmacro %}
